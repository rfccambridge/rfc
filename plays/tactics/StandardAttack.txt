Metadata:
type tactic
name StandardAttack

Parameters:

Objects:

# Local Constants
REGION_RADIUS (double 1)
VICINITY (double 0.3)
RANGE (double 2)
PI (double 3.1415)


# Regions
regionpoint1 (point 2.4 -1.2)
regionpoint2 (point 2.4 0)
regionpoint3 (point 2.4 1.2)

# Ball and robots
ballpoint (pointof ball)
attacker (closest friendly ballpoint loose)
attackerpoint (pointof attacker)
supporter (closest friendly regionpoint2 loose)
supporterpoint (pointof supporter)

# BALL 
ballinrange (< (pointpointdistance ballpoint (theirgoal)) RANGE)
ballvelocity (velocityof ball)
balldirection (getAngle ballvelocity)
ballprojline (linedirection ballpoint balldirection)
ballprojpoint (linetopoint ballprojline 0.5)

# SUPPORTER 

# Geometry
supportercircle (circle supporterpoint VICINITY)
passdistance (pointpointdistance ballpoint supporterpoint)
passangle (angleBetweenTwoLines ballprojline (line ballpoint supporterpoint)) 
projpassdestpoint (linetopoint ballprojline passdistance)
passdiffvector (pointsubtract projpassdestpoint supporterpoint)
passdiffline (line projpassdestpoint supporterpoint)
passdiffdistance (pointpointdistance projpassdestpoint supporterpoint)

# Booleans
supporterinregion1 (inRegion supporterpoint regionpoint1 REGION_RADIUS) 
supporterinregion2 (inRegion supporterpoint regionpoint2 REGION_RADIUS) 
supporterinregion3 (inRegion supporterpoint regionpoint3 REGION_RADIUS) 

supporterinrange (< (pointpointdistance supporterpoint (theirGoalBestShot)) RANGE)

supportershotclear (pathClear supporterpoint (theirGoalBestShot) 0.2)

supporterhasshot (and supporterinrange supportershotclear)

passclear (pathClear ballpoint supporterpoint 0.2)

supporterwellpositioned (and supporterhasshot passclear) 

supporterfree (= 0 (numberOfRobotsInACircle supportercircle enemy))

ballpassed (< passdiffdistance 0.2) 

shotongoal (bool false)

# Movement
gotoregion1 (robotpointpointmovenoavoid supporter regionpoint1 ballpoint)
gotoregion2 (robotpointpointmovenoavoid supporter regionpoint2 ballpoint)
gotoregion3 (robotpointpointmovenoavoid supporter regionpoint3 ballpoint)

# Actions
getinrange (if_Action (< (getYcoord ballpoint) 0) gotoregion1 gotoregion3)

changeregion (if_Action (inRegion supporterpoint regionpoint1 REGION_RADIUS) gotoregion2 (if_Action (inRegion supporterpoint regionpoint2 REGION_RADIUS) gotoregion3 gotoregion1))

waitforpass (donothing supporter)

meetpass (robotpointpointmovenoavoid supporter ballpoint ballpoint) 

# TODO getoutofway
getoutofway (donothing supporter)

# TODO improveshootangle
improveshootangle (donothing supporter)

# TODO improvepassangle 
improvepassangle (donothing supporter)

# Decision tree
#support 
#(if_Action supporterinrange 
#	(if_Action ballpassed
#		(if_Action shotongoal
#			getoutofway
#			meetpass)
#		(if_Action supporterfree
#			(if_Action clearpass
#				(if_Action clearshot
#					waitforpass
#					improveshootangle)
#				improvepassangle)
#			changeregion))
#	getinrange)

support (if_Action supporterinrange (if_Action ballpassed (if_Action shotongoal meetpass meetpass) (if_Action supporterfree (if_Action passclear (if_Action supportershotclear waitforpass waitforpass) waitforpass) changeregion)) getinrange)

# ATTACKER 
# Geometry

attackercircle (circle attackerpoint VICINITY)

dribbleuppoint (point (+ (getXcoord attackerpoint) VICINITY) (+ (getYcoord attackerpoint) 0))

closestenemypoint (pointof (closest enemy attackerpoint loose))

enemyattackercircleintersect (linecircleintersection (line attackerpoint closestenemypoint) attackercircle 1)

dribbleawaypoint (rotatePointAroundAnotherPoint attackerpoint enemyattackercircleintersect PI)


# booleans
attackerhasshot (and ballinrange (pathClear ballpoint (theirGoalBestShot) 0.2))

attackerfree (= 0 (numberOfRobotsInACircle attackercircle enemy))

# Actions
shoot (robotpointkick attacker (theirGoalBestShot))
pass (robotpointkick attacker supporterpoint)
dribbleup (robotpointdribble attacker dribbleuppoint)
dribbleaway (robotpointdribble attacker dribbleawaypoint)

# Decision tree
#attack 
#(if_Action attackerhasshot 
#	shoot
#	(if_Action (and passclear supporterhasshot)
#		pass
#		(if_Action attackerfree
#			dribbleup
#			(if_Action passclear
#				pass
#				dribbleaway))))

attack (if_Action attackerhasshot shoot (if_Action (and passclear supporterhasshot) pass (if_Action attackerfree dribbleup (if_Action passclear pass dribbleaway))))

Actions:
attack
support