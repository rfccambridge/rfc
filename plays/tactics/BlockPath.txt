Metadata:
type tactic
name BlockPath

Parameters:
point_defended point
distance double
should_kick bool

Objects:
perimeter (circle point_defended distance)

ballpoint (pointof ball)

ballline (line ballpoint point_defended)

defensept (linecircleintersection ballline perimeter -1)

defensebot (closest friendly defensept loose)
defensebotpt (pointof defensebot)

# is defender going in to kick
defensedisttoball (pointpointdistance defensebotpt ballpoint)




# offense bot closest to the ball
offensebot (closest enemy ballpoint loose)
offbotpt (pointof offensebot)

offdistball (pointpointdistance offbotpt ballpoint)
# distance of the offensebot closest to the ball


# distance of the ball to the goal
offdistgoal (pointpointdistance ballpoint (ourgoal))

#distance from goal on the line from ball to goal
radius (max .45 distance )


# should robot kick; Robot will kick if parameter passed in is True, it is closer to the ball than the enemy robots, and the path from the ball to the goal is clear)
do_kick (and (and should_kick (< defensedisttoball offdistball)) (pathClear ballpoint (theirgoal) (pointpointdistance defensebotpt (theirgoal))))

blockpathpt (linecircleintersection (line ballpoint (ourgoal)) (circle (ourgoal) radius) -1)

Actions:
(if_Action do_kick (robotpointkick defensebot (theirgoal)) (robotpointpointmove defensebot blockpathpt ballpoint))

#(if_Action do_kick 
#	(robotpointkick defensebot (theirgoal)) 
#	(if_Action (< offdistball .5)
#		(robotpointpointmove defensebot (if_Action blockpath ballpoint)
#		(robotpointpointmove defensebot defensept ballpoint)))