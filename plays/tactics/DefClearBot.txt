Metadata:
type tactic
name DefClearBot

Parameters:
bot robot

Objects:


# constants
CLEAR_DIST (const-double CLEAR_DIST)
FIELD_WIDTH (const-double FIELD_WIDTH)
FIELD_HEIGHT (const-double FIELD_HEIGHT)

ballpoint (pointof ball)
standbypt (point 1.0 0.0)
cir (circle ballpoint 0.55)
botpoint (pointof bot)

leftcorner (point FIELD_WIDTH (- 0 FIELD_HEIGHT))
rightcorner (point FIELD_WIDTH FIELD_HEIGHT)
shotongoal (theirGoalBestShot)
kicktotarget (if_Action (pathClear ballpoint shotongoal CLEAR_DIST) (robotpointkick bot shotongoal) (if_Action (pathClear ballpoint leftcorner CLEAR_DIST) (robotpointstrengthkick bot leftcorner 2) (robotpointstrengthkick bot rightcorner 2)))

ballvelocity (velocityof ball)
balldirection (getAngle ballvelocity)
ballprojline (linedirection ballpoint balldirection)
me (circle (pointof bot) CLEAR_DIST)
collision (existslinecircleintersection ballprojline me)
tmpbool (bool true)

Actions:
#(if_Action (and tmpbool collision) (robotpointpointmove bot (point 1.0 0.75) ballpoint) (if_Action (and (< (numberOfRobotsInACircle cir friendly) 2) (< (pointpointdistance ballpoint botpoint) 0.3)) kicktotarget (robotpointpointmove bot standbypt ballpoint)))

# THIS IS PREVIOUS ONE
#(if_Action (and (< (numberOfRobotsInACircle cir friendly) 2) (< (pointpointdistance ballpoint botpoint) 0.3)) kicktotarget (robotpointpointmove bot standbypt ballpoint))

(if_Action (and tmpbool collision) (robotpointpointmove bot (point 1.0 0.75) ballpoint) (if_Action (< (numberOfRobotsInACircle cir friendly) 2) kicktotarget (robotpointpointmove bot standbypt ballpoint)))

# THIS ONE DEF WORKS
#(if_Action (< (numberOfRobotsInACircle cir friendly) 2) kicktotarget (robotpointpointmove bot standbypt ballpoint))


# Outer loop
# If ball's velocity is in your dir, move out of the way
#(and (< (/ (pi) 2) balldirection) (> balldirection (/ (- 0 (pi)) 2)))
#(and (and tmpbool collision) (and (< (/ (pi) 2) balldirection) (> balldirection (/ (- 0 (pi)) 2))))